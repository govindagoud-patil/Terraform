name: 'Terraform prod'

on:
 # push:
 #  branches:
 #   - master
  workflow_dispatch:

env:  
 tfvarfilepath: "./prod/prod.tfvars"
 workspacename: "prod"
 tfworkingDirectory: .

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
 

    runs-on: ubuntu-latest
    

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell : bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1.2.1
      with:
       terraform_version: 0.14.8
    
    - name: HashiCorp - default init  
      id: defaultinit
      run: terraform init  
      working-directory: ${{env.tfworkingDirectory}}

        
    - name: HashiCorp - workspace create 
      id: workspace
      run: |
            terraform worksspace select ${{env.workspacename}} || terraform workspace new ${{env.workspacename}}
      continue-on-error: true

    - name: 'Terraform init'
      id: init
      run: terraform init -reconfigure -var-file=${{ env.tfvarfilepath }}
      working-directory: ${{env.tfworkingDirectory}}
      
    - name: 'Terraform format'
      id: fmt
      run: terraform fmt -check 
      continue-on-error: true
      
    - name: 'Terraform validate'
      id: validate
      run: terraform validate -var-file=${{ env.tfvarfilepath }}
      working-directory: ${{env.tfworkingDirectory}}
      
    - name: 'Terraform refresh'
      id: refresh
      run: terraform refresh 
      working-directory: ${{env.tfworkingDirectory}}
          
    - name: 'Terraform Plan'
      id: plan
      run: terraform plan -var-file=${{ env.tfvarfilepath }}
    
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
      
    - name: 'Terraform apply'
      id: apply
      run: terraform apply -var-file=${{ env.tfvarfilepath }} -auto-approve
      working-directory: ${{env.tfworkingDirectory}}
      


